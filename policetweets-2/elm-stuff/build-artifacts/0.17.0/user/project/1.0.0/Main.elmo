var _user$project$Main$px = function (number) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(number),
		'px');
};
var _user$project$Main$onClickStop = function (message) {
	return A3(
		_elm_lang$html$Html_Events$onWithOptions,
		'click',
		{stopPropagation: true, preventDefault: false},
		_elm_lang$core$Json_Decode$succeed(message));
};
var _user$project$Main_ops = _user$project$Main_ops || {};
_user$project$Main_ops['=>'] = F2(
	function (v0, v1) {
		return {ctor: '_Tuple2', _0: v0, _1: v1};
	});
var _user$project$Main$buttonStyle = function (disabled) {
	return _elm_lang$core$Native_List.fromArray(
		[
			A2(_user$project$Main_ops['=>'], 'border-radius', '5px'),
			A2(_user$project$Main_ops['=>'], 'margin', '5px'),
			A2(_user$project$Main_ops['=>'], 'border-width', '0'),
			A2(
			_user$project$Main_ops['=>'],
			'background',
			disabled ? '#aaa' : '#2969B0'),
			A2(_user$project$Main_ops['=>'], 'color', '#fff')
		]);
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$getCurrent = function (model) {
	return A2(
		_elm_lang$core$Maybe$withDefault,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$List$head(
			A2(_elm_lang$core$List$drop, model.historyIndex, model.history)));
};
var _user$project$Main$nextModel = F2(
	function (model, next) {
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{
					history: A2(
						_elm_lang$core$Basics_ops['++'],
						A2(_elm_lang$core$List$take, model.historyIndex + 1, model.history),
						_elm_lang$core$Native_List.fromArray(
							[next])),
					historyIndex: model.historyIndex + 1
				}),
			_1: _elm_lang$core$Platform_Cmd$none
		};
	});
var _user$project$Main$update = F2(
	function (msg, _p0) {
		var _p1 = _p0;
		var _p4 = _p1;
		var _p3 = _p1.historyIndex;
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'Click':
				return A2(
					_user$project$Main$nextModel,
					_p4,
					A2(
						_elm_lang$core$Basics_ops['++'],
						_user$project$Main$getCurrent(_p4),
						_elm_lang$core$Native_List.fromArray(
							[_p2._0])));
			case 'RemoveDot':
				return A2(
					_user$project$Main$nextModel,
					_p4,
					A2(
						_elm_lang$core$List$filter,
						F2(
							function (x, y) {
								return !_elm_lang$core$Native_Utils.eq(x, y);
							})(_p2._0),
						_user$project$Main$getCurrent(_p4)));
			case 'Undo':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						_p4,
						{
							historyIndex: A2(_elm_lang$core$Basics$max, 0, _p3 - 1)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						_p4,
						{
							historyIndex: A2(
								_elm_lang$core$Basics$min,
								_elm_lang$core$List$length(_p1.history) - 1,
								_p3 + 1)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$Model = F2(
	function (a, b) {
		return {historyIndex: a, history: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A2(
		_user$project$Main$Model,
		0,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$core$Native_List.fromArray(
				[])
			])),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$Redo = {ctor: 'Redo'};
var _user$project$Main$Undo = {ctor: 'Undo'};
var _user$project$Main$RemoveDot = function (a) {
	return {ctor: 'RemoveDot', _0: a};
};
var _user$project$Main$Click = function (a) {
	return {ctor: 'Click', _0: a};
};
var _user$project$Main$onAdd = A2(
	_elm_lang$html$Html_Events$on,
	'click',
	A2(_elm_lang$core$Json_Decode$map, _user$project$Main$Click, _elm_lang$mouse$Mouse$position));
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_user$project$Main$onAdd,
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								A2(_user$project$Main_ops['=>'], 'background-color', '#eeeeee'),
								A2(_user$project$Main_ops['=>'], 'width', '600px'),
								A2(_user$project$Main_ops['=>'], 'height', '200px')
							]))
					]),
				A2(
					_elm_lang$core$List$map,
					function (dot) {
						return A2(
							_elm_lang$html$Html$div,
							_elm_lang$core$Native_List.fromArray(
								[
									_user$project$Main$onClickStop(
									_user$project$Main$RemoveDot(dot)),
									_elm_lang$html$Html_Attributes$style(
									_elm_lang$core$Native_List.fromArray(
										[
											A2(_user$project$Main_ops['=>'], 'background-color', '#EB6B56'),
											A2(_user$project$Main_ops['=>'], 'cursor', 'move'),
											A2(_user$project$Main_ops['=>'], 'width', '20px'),
											A2(_user$project$Main_ops['=>'], 'height', '20px'),
											A2(_user$project$Main_ops['=>'], 'margin-left', '-10px'),
											A2(_user$project$Main_ops['=>'], 'margin-top', '-10px'),
											A2(_user$project$Main_ops['=>'], 'border-radius', '10px'),
											A2(_user$project$Main_ops['=>'], 'position', 'absolute'),
											A2(
											_user$project$Main_ops['=>'],
											'left',
											_user$project$Main$px(dot.x)),
											A2(
											_user$project$Main_ops['=>'],
											'top',
											_user$project$Main$px(dot.y))
										]))
								]),
							_elm_lang$core$Native_List.fromArray(
								[]));
					},
					_user$project$Main$getCurrent(model))),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Undo),
						_elm_lang$html$Html_Attributes$style(
						_user$project$Main$buttonStyle(
							_elm_lang$core$Native_Utils.eq(model.historyIndex, 0)))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Undo')
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$Redo),
						_elm_lang$html$Html_Attributes$style(
						_user$project$Main$buttonStyle(
							_elm_lang$core$Native_Utils.eq(
								model.historyIndex,
								_elm_lang$core$List$length(model.history) - 1)))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('Redo')
					]))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})
};
